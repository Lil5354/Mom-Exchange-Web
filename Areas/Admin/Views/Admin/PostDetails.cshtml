@model B_M.Models.PostItem
@{
    ViewBag.Title = "Chi tiết bài viết";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="admin-card">
    <div class="admin-card-header">
        <h5><i class="fas fa-newspaper"></i> Chi tiết bài viết</h5>
        <div style="display: flex; gap: 10px; align-items: center;">
            <a href="@Url.Action("Posts", "Admin", new { area = "Admin" })" class="btn-admin-secondary" style="text-decoration: none;">
                <i class="fas fa-arrow-left"></i> Quay lại
            </a>
        </div>
    </div>
    <div class="admin-card-body">
        @if (Model != null)
        {
            <div style="display: grid; grid-template-columns: 1fr 300px; gap: 30px;">
                <!-- Main Content -->
                <div>
                    <!-- Post Image -->
                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <div style="margin-bottom: 20px;">
                            <img src="@Model.ImageUrl" alt="Post Image" style="width: 100%; max-height: 400px; object-fit: cover; border-radius: 12px;" />
                        </div>
                    }
                    
                    <!-- Post Title -->
                    <h2 style="color: #2c3e50; margin-bottom: 15px; font-weight: 700;">@Model.Title</h2>
                    
                    <!-- Post Content -->
                    <div style="background: #f8f9fa; padding: 20px; border-radius: 12px; margin-bottom: 20px; line-height: 1.6;">
                        @Html.Raw(Model.Content.Replace("\n", "<br/>"))
                    </div>
                    
                    <!-- Tags -->
                    @if (Model.Tags.Any())
                    {
                        <div style="margin-bottom: 20px;">
                            <h6 style="color: #495057; margin-bottom: 10px;">Tags:</h6>
                            <div>
                                @foreach (var tag in Model.Tags)
                                {
                                    <span style="background: #e3f2fd; color: #1976d2; padding: 5px 12px; border-radius: 15px; font-size: 12px; margin-right: 8px; margin-bottom: 5px; display: inline-block;">
                                        #@tag
                                    </span>
                                }
                            </div>
                        </div>
                    }
                </div>
                
                <!-- Sidebar -->
                <div>
                    <!-- Post Info Card -->
                    <div class="admin-card" style="margin-bottom: 20px;">
                        <div class="admin-card-header">
                            <h6><i class="fas fa-info-circle"></i> Thông tin bài viết</h6>
                        </div>
                        <div class="admin-card-body">
                            <div style="margin-bottom: 15px;">
                                <strong>Loại bài:</strong>
                                @{
                                    string typeClass = "";
                                    string typeIcon = "";
                                    switch (Model.Type)
                                    {
                                        case "Community":
                                            typeClass = "badge-info";
                                            typeIcon = "users";
                                            break;
                                        case "Trade":
                                            typeClass = "badge-warning";
                                            typeIcon = "exchange-alt";
                                            break;
                                        case "Social":
                                            typeClass = "badge-success";
                                            typeIcon = "heart";
                                            break;
                                        case "Milk":
                                            typeClass = "badge-danger";
                                            typeIcon = "baby";
                                            break;
                                        default:
                                            typeClass = "badge-secondary";
                                            typeIcon = "newspaper";
                                            break;
                                    }
                                }
                                <span class="badge @typeClass" style="margin-left: 10px;">
                                    <i class="fas fa-@typeIcon"></i> @Model.Type
                                </span>
                            </div>
                            
                            <div style="margin-bottom: 15px;">
                                <strong>Trạng thái:</strong>
                                @{
                                    string statusClass = "";
                                    switch (Model.Status)
                                    {
                                        case "Active":
                                            statusClass = "badge-success";
                                            break;
                                        case "Pending":
                                            statusClass = "badge-warning";
                                            break;
                                        case "Rejected":
                                            statusClass = "badge-danger";
                                            break;
                                        default:
                                            statusClass = "badge-secondary";
                                            break;
                                    }
                                }
                                <span class="badge @statusClass" style="margin-left: 10px;">@Model.Status</span>
                            </div>
                            
                            <div style="margin-bottom: 15px;">
                                <strong>Ngày tạo:</strong><br/>
                                <span style="color: #6c757d;">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                            </div>
                            
                            @if (Model.UpdatedAt.HasValue)
                            {
                                <div style="margin-bottom: 15px;">
                                    <strong>Cập nhật lần cuối:</strong><br/>
                                    <span style="color: #6c757d;">@Model.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")</span>
                                </div>
                            }
                            
                            @if (!string.IsNullOrEmpty(Model.Location))
                            {
                                <div style="margin-bottom: 15px;">
                                    <strong>Địa điểm:</strong><br/>
                                    <span style="color: #6c757d;">
                                        <i class="fas fa-map-marker-alt"></i> @Model.Location
                                    </span>
                                </div>
                            }
                            
                            @if (Model.Type == "Milk" && Model.IsHealthVerified)
                            {
                                <div style="margin-bottom: 15px;">
                                    <strong>Xác minh sức khỏe:</strong><br/>
                                    <span style="color: #28a745;">
                                        <i class="fas fa-check-circle"></i> Đã xác minh
                                    </span>
                                </div>
                            }
                            
                            @if (Model.Status == "Rejected" && !string.IsNullOrEmpty(Model.RejectionReason))
                            {
                                <div style="margin-bottom: 15px;">
                                    <strong>Lý do từ chối:</strong><br/>
                                    <span style="color: #dc3545; font-size: 12px;">
                                        <i class="fas fa-exclamation-triangle"></i> @Model.RejectionReason
                                    </span>
                                </div>
                            }
                        </div>
                    </div>
                    
                    <!-- Author Info Card -->
                    <div class="admin-card" style="margin-bottom: 20px;">
                        <div class="admin-card-header">
                            <h6><i class="fas fa-user"></i> Thông tin tác giả</h6>
                        </div>
                        <div class="admin-card-body">
                            <div style="margin-bottom: 15px;">
                                <strong>Tên:</strong><br/>
                                <span style="color: #6c757d;">@Model.AuthorName</span>
                            </div>
                            
                            <div style="margin-bottom: 15px;">
                                <strong>Email:</strong><br/>
                                <span style="color: #6c757d;">@Model.AuthorEmail</span>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Engagement Stats Card -->
                    <div class="admin-card" style="margin-bottom: 20px;">
                        <div class="admin-card-header">
                            <h6><i class="fas fa-chart-bar"></i> Thống kê tương tác</h6>
                        </div>
                        <div class="admin-card-body">
                            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px;">
                                <div style="text-align: center;">
                                    <div style="font-size: 24px; font-weight: 700; color: #e74c3c;">@Model.LikeCount</div>
                                    <div style="font-size: 12px; color: #6c757d;">
                                        <i class="fas fa-heart"></i> Lượt thích
                                    </div>
                                </div>
                                <div style="text-align: center;">
                                    <div style="font-size: 24px; font-weight: 700; color: #3498db;">@Model.CommentCount</div>
                                    <div style="font-size: 12px; color: #6c757d;">
                                        <i class="fas fa-comment"></i> Bình luận
                                    </div>
                                </div>
                                <div style="text-align: center;">
                                    <div style="font-size: 24px; font-weight: 700; color: #95a5a6;">@Model.ViewCount</div>
                                    <div style="font-size: 12px; color: #6c757d;">
                                        <i class="fas fa-eye"></i> Lượt xem
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Actions Card -->
                    <div class="admin-card">
                        <div class="admin-card-header">
                            <h6><i class="fas fa-cogs"></i> Thao tác</h6>
                        </div>
                        <div class="admin-card-body">
                            @if (Model.Status == "Pending")
                            {
                                <button data-post-id="@Model.Id" data-post-type="@Model.Type" 
                                        class="btn-admin" style="width: 100%; margin-bottom: 10px;">
                                    <i class="fas fa-check"></i> Duyệt bài viết
                                </button>
                                <button data-post-id="@Model.Id" data-post-type="@Model.Type" 
                                        class="btn-admin-secondary" style="width: 100%; margin-bottom: 10px; background: #dc3545; color: white;">
                                    <i class="fas fa-times"></i> Từ chối bài viết
                                </button>
                            }
                            else if (Model.Status == "Active")
                            {
                                <button data-post-id="@Model.Id" data-post-type="@Model.Type" 
                                        class="btn-admin-secondary" style="width: 100%; margin-bottom: 10px; background: #dc3545; color: white;">
                                    <i class="fas fa-ban"></i> Vô hiệu hóa
                                </button>
                            }
                            else if (Model.Status == "Rejected")
                            {
                                <button data-post-id="@Model.Id" data-post-type="@Model.Type" 
                                        class="btn-admin" style="width: 100%; margin-bottom: 10px;">
                                    <i class="fas fa-check"></i> Duyệt lại
                                </button>
                            }
                            
                            <button data-post-id="@Model.Id" data-post-type="@Model.Type" 
                                    class="btn-admin-secondary" style="width: 100%; background: #6c757d; color: white;">
                                <i class="fas fa-trash"></i> Xóa bài viết
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div style="text-align: center; padding: 40px; color: #7f8c8d;">
                <i class="fas fa-exclamation-triangle" style="font-size: 48px; margin-bottom: 15px; opacity: 0.5;"></i>
                <p>Không tìm thấy bài viết</p>
                <a href="@Url.Action("Posts", "Admin", new { area = "Admin" })" class="btn-admin" style="margin-top: 10px; text-decoration: none;">
                    <i class="fas fa-arrow-left"></i> Quay lại danh sách
                </a>
            </div>
        }
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function() {
            // Approve Post
            $('button[data-post-id]').filter(function() {
                return $(this).text().includes('Duyệt');
            }).on('click', function() {
                var postId = $(this).data('post-id');
                var postType = $(this).data('post-type');
                approvePost(postId, postType);
            });

            // Reject Post
            $('button[data-post-id]').filter(function() {
                return $(this).text().includes('Từ chối');
            }).on('click', function() {
                var reason = prompt('Nhập lý do từ chối bài viết:');
                if (reason && reason.trim() !== '') {
                    var postId = $(this).data('post-id');
                    var postType = $(this).data('post-type');
                    rejectPost(postId, postType, reason.trim());
                }
            });

            // Delete Post
            $('button[data-post-id]').filter(function() {
                return $(this).text().includes('Xóa');
            }).on('click', function() {
                var postId = $(this).data('post-id');
                var postType = $(this).data('post-type');
                deletePost(postId, postType);
            });
        });

        function approvePost(postId, postType) {
            if (confirm('Bạn có chắc chắn muốn duyệt bài viết này?')) {
                $.ajax({
                    url: '@Url.Action("ApprovePost", "Admin", new { area = "Admin" })',
                    type: 'POST',
                    data: {
                        postId: postId,
                        postType: postType,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showAlert('success', response.message);
                            setTimeout(function() {
                                location.reload();
                            }, 1500);
                        } else {
                            showAlert('error', response.message);
                        }
                    },
                    error: function() {
                        showAlert('error', 'Có lỗi xảy ra khi duyệt bài viết.');
                    }
                });
            }
        }

        function rejectPost(postId, postType, reason) {
            $.ajax({
                url: '@Url.Action("RejectPost", "Admin", new { area = "Admin" })',
                type: 'POST',
                data: {
                    postId: postId,
                    postType: postType,
                    reason: reason,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        showAlert('success', response.message);
                        setTimeout(function() {
                            location.reload();
                        }, 1500);
                    } else {
                        showAlert('error', response.message);
                    }
                },
                error: function() {
                    showAlert('error', 'Có lỗi xảy ra khi từ chối bài viết.');
                }
            });
        }

        function deletePost(postId, postType) {
            if (confirm('Bạn có chắc chắn muốn xóa bài viết này? Hành động này không thể hoàn tác.')) {
                $.ajax({
                    url: '@Url.Action("DeletePost", "Admin", new { area = "Admin" })',
                    type: 'POST',
                    data: {
                        postId: postId,
                        postType: postType,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response.success) {
                            showAlert('success', response.message);
                            setTimeout(function() {
                                window.location.href = '@Url.Action("Posts", "Admin", new { area = "Admin" })';
                            }, 1500);
                        } else {
                            showAlert('error', response.message);
                        }
                    },
                    error: function() {
                        showAlert('error', 'Có lỗi xảy ra khi xóa bài viết.');
                    }
                });
            }
        }

        function showAlert(type, message) {
            var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            var alertHtml = '<div class="alert ' + alertClass + ' alert-dismissible fade show" role="alert" style="margin-bottom: 20px;">' +
                '<strong>' + (type === 'success' ? 'Thành công!' : 'Lỗi!') + '</strong> ' + message +
                '<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close" style="float: right; background: none; border: none; font-size: 20px; cursor: pointer;">&times;</button>' +
                '</div>';
            
            $('.admin-content').prepend(alertHtml);
            
            // Auto-hide after 5 seconds
            setTimeout(function() {
                $('.alert').fadeOut();
            }, 5000);
        }
    </script>
}

