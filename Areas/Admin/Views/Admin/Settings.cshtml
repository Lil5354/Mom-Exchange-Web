@model B_M.Models.SettingsViewModel
@{
    ViewBag.Title = "Cài đặt";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="settings-container">
    <!-- Email Configuration Card -->
    <div class="admin-card settings-card" data-aos="fade-up" data-aos-delay="100">
        <div class="admin-card-header">
            <h5><i class="fas fa-envelope"></i> Cấu hình Email</h5>
            <div class="settings-status">
                <span class="status-indicator @(Model.EmailSettings.IsEnabled ? "active" : "inactive")"></span>
                <span class="status-text">@(Model.EmailSettings.IsEnabled ? "Hoạt động" : "Tạm dừng")</span>
            </div>
        </div>
        <div class="admin-card-body">
            <form id="emailSettingsForm" class="settings-form">
                @Html.AntiForgeryToken()
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="SmtpHost">SMTP Host</label>
                        <input type="text" class="form-control" id="SmtpHost" name="SmtpHost" value="@Model.EmailSettings.SmtpHost" required>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="SmtpPort">SMTP Port</label>
                        <input type="number" class="form-control" id="SmtpPort" name="SmtpPort" value="@Model.EmailSettings.SmtpPort" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="Username">Username</label>
                        <input type="text" class="form-control" id="Username" name="Username" value="@Model.EmailSettings.Username" required>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="Password">Password</label>
                        <input type="password" class="form-control" id="Password" name="Password" value="@Model.EmailSettings.Password" required>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="FromEmail">From Email</label>
                        <input type="email" class="form-control" id="FromEmail" name="FromEmail" value="@Model.EmailSettings.FromEmail" required>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="FromName">From Name</label>
                        <input type="text" class="form-control" id="FromName" name="FromName" value="@Model.EmailSettings.FromName" required>
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-check">
                        <input type="checkbox" class="form-check-input" id="EnableSSL" name="EnableSSL" @(Model.EmailSettings.EnableSSL ? "checked" : "")>
                        <label class="form-check-label" for="EnableSSL">Bật SSL/TLS</label>
                    </div>
                </div>
                <div class="form-actions">
                    <button type="button" class="btn-admin-secondary" id="testEmailBtn">
                        <i class="fas fa-paper-plane"></i> Test Email
                    </button>
                    <button type="submit" class="btn-admin">
                        <i class="fas fa-save"></i> Lưu cài đặt
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Security Settings Card -->
    <div class="admin-card settings-card" data-aos="fade-up" data-aos-delay="200">
        <div class="admin-card-header">
            <h5><i class="fas fa-shield-alt"></i> Bảo mật hệ thống</h5>
            <div class="settings-status">
                <span class="status-indicator active"></span>
                <span class="status-text">Được bảo vệ</span>
            </div>
        </div>
        <div class="admin-card-body">
            <form id="securitySettingsForm" class="settings-form">
                @Html.AntiForgeryToken()
                <div class="form-row">
                    <div class="form-group col-md-4">
                        <label for="MinPasswordLength">Độ dài mật khẩu tối thiểu</label>
                        <input type="number" class="form-control" id="MinPasswordLength" name="MinPasswordLength" value="@Model.SecuritySettings.MinPasswordLength" min="6" max="20">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="SessionTimeoutMinutes">Timeout phiên (phút)</label>
                        <input type="number" class="form-control" id="SessionTimeoutMinutes" name="SessionTimeoutMinutes" value="@Model.SecuritySettings.SessionTimeoutMinutes" min="5" max="480">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="MaxLoginAttempts">Số lần đăng nhập tối đa</label>
                        <input type="number" class="form-control" id="MaxLoginAttempts" name="MaxLoginAttempts" value="@Model.SecuritySettings.MaxLoginAttempts" min="3" max="10">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="AccountLockoutMinutes">Thời gian khóa tài khoản (phút)</label>
                        <input type="number" class="form-control" id="AccountLockoutMinutes" name="AccountLockoutMinutes" value="@Model.SecuritySettings.AccountLockoutMinutes" min="5" max="60">
                    </div>
                    <div class="form-group col-md-6">
                        <label for="PasswordChangeDays">Yêu cầu đổi mật khẩu (ngày)</label>
                        <input type="number" class="form-control" id="PasswordChangeDays" name="PasswordChangeDays" value="@Model.SecuritySettings.PasswordChangeDays" min="30" max="365">
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-check-group">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="RequireSpecialChars" name="RequireSpecialChars" @(Model.SecuritySettings.RequireSpecialChars ? "checked" : "")>
                            <label class="form-check-label" for="RequireSpecialChars">Yêu cầu ký tự đặc biệt</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="RequireNumbers" name="RequireNumbers" @(Model.SecuritySettings.RequireNumbers ? "checked" : "")>
                            <label class="form-check-label" for="RequireNumbers">Yêu cầu số</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="RequireUppercase" name="RequireUppercase" @(Model.SecuritySettings.RequireUppercase ? "checked" : "")>
                            <label class="form-check-label" for="RequireUppercase">Yêu cầu chữ hoa</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="EnableTwoFactor" name="EnableTwoFactor" @(Model.SecuritySettings.EnableTwoFactor ? "checked" : "")>
                            <label class="form-check-label" for="EnableTwoFactor">Bật xác thực 2 yếu tố</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="LogSecurityEvents" name="LogSecurityEvents" @(Model.SecuritySettings.LogSecurityEvents ? "checked" : "")>
                            <label class="form-check-label" for="LogSecurityEvents">Ghi log sự kiện bảo mật</label>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn-admin">
                        <i class="fas fa-save"></i> Lưu cài đặt
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Notification Settings Card -->
    <div class="admin-card settings-card" data-aos="fade-up" data-aos-delay="300">
        <div class="admin-card-header">
            <h5><i class="fas fa-bell"></i> Quản lý thông báo</h5>
            <div class="settings-status">
                <span class="status-indicator active"></span>
                <span class="status-text">Đang hoạt động</span>
            </div>
        </div>
        <div class="admin-card-body">
            <form id="notificationSettingsForm" class="settings-form">
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <h6>Loại thông báo</h6>
                    <div class="form-check-group">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="EnableEmailNotifications" name="EnableEmailNotifications" @(Model.NotificationSettings.EnableEmailNotifications ? "checked" : "")>
                            <label class="form-check-label" for="EnableEmailNotifications">Thông báo Email</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="EnablePushNotifications" name="EnablePushNotifications" @(Model.NotificationSettings.EnablePushNotifications ? "checked" : "")>
                            <label class="form-check-label" for="EnablePushNotifications">Thông báo Push</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="EnableSMSNotifications" name="EnableSMSNotifications" @(Model.NotificationSettings.EnableSMSNotifications ? "checked" : "")>
                            <label class="form-check-label" for="EnableSMSNotifications">Thông báo SMS</label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <h6>Tùy chọn thông báo</h6>
                    <div class="form-check-group">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="NotifyNewUserRegistration" name="NotifyNewUserRegistration" @(Model.NotificationSettings.NotifyNewUserRegistration ? "checked" : "")>
                            <label class="form-check-label" for="NotifyNewUserRegistration">Đăng ký người dùng mới</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="NotifyPasswordReset" name="NotifyPasswordReset" @(Model.NotificationSettings.NotifyPasswordReset ? "checked" : "")>
                            <label class="form-check-label" for="NotifyPasswordReset">Đặt lại mật khẩu</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="NotifyAccountLocked" name="NotifyAccountLocked" @(Model.NotificationSettings.NotifyAccountLocked ? "checked" : "")>
                            <label class="form-check-label" for="NotifyAccountLocked">Khóa tài khoản</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="NotifySystemMaintenance" name="NotifySystemMaintenance" @(Model.NotificationSettings.NotifySystemMaintenance ? "checked" : "")>
                            <label class="form-check-label" for="NotifySystemMaintenance">Bảo trì hệ thống</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="NotifySecurityAlerts" name="NotifySecurityAlerts" @(Model.NotificationSettings.NotifySecurityAlerts ? "checked" : "")>
                            <label class="form-check-label" for="NotifySecurityAlerts">Cảnh báo bảo mật</label>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn-admin">
                        <i class="fas fa-save"></i> Lưu cài đặt
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- System Configuration Card -->
    <div class="admin-card settings-card" data-aos="fade-up" data-aos-delay="400">
        <div class="admin-card-header">
            <h5><i class="fas fa-cogs"></i> Cấu hình hệ thống</h5>
            <div class="settings-status">
                <span class="status-indicator @(Model.SystemConfiguration.MaintenanceMode ? "warning" : "active")"></span>
                <span class="status-text">@(Model.SystemConfiguration.MaintenanceMode ? "Bảo trì" : "Hoạt động")</span>
            </div>
        </div>
        <div class="admin-card-body">
            <form id="systemConfigurationForm" class="settings-form">
                @Html.AntiForgeryToken()
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="SiteName">Tên trang web</label>
                        <input type="text" class="form-control" id="SiteName" name="SiteName" value="@Model.SystemConfiguration.SiteName" required>
                    </div>
                    <div class="form-group col-md-6">
                        <label for="SiteUrl">URL trang web</label>
                        <input type="url" class="form-control" id="SiteUrl" name="SiteUrl" value="@Model.SystemConfiguration.SiteUrl">
                    </div>
                </div>
                <div class="form-group">
                    <label for="SiteDescription">Mô tả trang web</label>
                    <textarea class="form-control" id="SiteDescription" name="SiteDescription" rows="3">@Model.SystemConfiguration.SiteDescription</textarea>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="ContactEmail">Email liên hệ</label>
                        <input type="email" class="form-control" id="ContactEmail" name="ContactEmail" value="@Model.SystemConfiguration.ContactEmail">
                    </div>
                    <div class="form-group col-md-6">
                        <label for="ContactPhone">Số điện thoại</label>
                        <input type="text" class="form-control" id="ContactPhone" name="ContactPhone" value="@Model.SystemConfiguration.ContactPhone">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-4">
                        <label for="MaxFileUploadSizeMB">Kích thước file tối đa (MB)</label>
                        <input type="number" class="form-control" id="MaxFileUploadSizeMB" name="MaxFileUploadSizeMB" value="@Model.SystemConfiguration.MaxFileUploadSizeMB" min="1" max="100">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="MaxFileUploadCount">Số file tối đa</label>
                        <input type="number" class="form-control" id="MaxFileUploadCount" name="MaxFileUploadCount" value="@Model.SystemConfiguration.MaxFileUploadCount" min="1" max="1000">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="ApiRateLimitPerMinute">API Rate Limit (req/min)</label>
                        <input type="number" class="form-control" id="ApiRateLimitPerMinute" name="ApiRateLimitPerMinute" value="@Model.SystemConfiguration.ApiRateLimitPerMinute" min="1" max="1000">
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-check-group">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="MaintenanceMode" name="MaintenanceMode" @(Model.SystemConfiguration.MaintenanceMode ? "checked" : "")>
                            <label class="form-check-label" for="MaintenanceMode">Chế độ bảo trì</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="EnableCaching" name="EnableCaching" @(Model.SystemConfiguration.EnableCaching ? "checked" : "")>
                            <label class="form-check-label" for="EnableCaching">Bật cache</label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label for="AllowedFileExtensions">Định dạng file cho phép</label>
                    <input type="text" class="form-control" id="AllowedFileExtensions" name="AllowedFileExtensions" value="@Model.SystemConfiguration.AllowedFileExtensions" placeholder="jpg,jpeg,png,gif,pdf">
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn-admin">
                        <i class="fas fa-save"></i> Lưu cài đặt
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Backup Settings Card -->
    <div class="admin-card settings-card" data-aos="fade-up" data-aos-delay="500">
    <div class="admin-card-header">
            <h5><i class="fas fa-database"></i> Sao lưu dữ liệu</h5>
            <div class="settings-status">
                <span class="status-indicator @(Model.BackupSettings.EnableAutoBackup ? "active" : "inactive")"></span>
                <span class="status-text">@(Model.BackupSettings.EnableAutoBackup ? "Tự động" : "Thủ công")</span>
            </div>
        </div>
        <div class="admin-card-body">
            <form id="backupSettingsForm" class="settings-form">
                @Html.AntiForgeryToken()
                <div class="form-row">
                    <div class="form-group col-md-4">
                        <label for="BackupFrequencyDays">Tần suất sao lưu (ngày)</label>
                        <input type="number" class="form-control" id="BackupFrequencyDays" name="BackupFrequencyDays" value="@Model.BackupSettings.BackupFrequencyDays" min="1" max="30">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="KeepBackupCount">Số lượng backup giữ lại</label>
                        <input type="number" class="form-control" id="KeepBackupCount" name="KeepBackupCount" value="@Model.BackupSettings.KeepBackupCount" min="1" max="30">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="BackupLocation">Vị trí sao lưu</label>
                        <input type="text" class="form-control" id="BackupLocation" name="BackupLocation" value="@Model.BackupSettings.BackupLocation">
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-check-group">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="EnableAutoBackup" name="EnableAutoBackup" @(Model.BackupSettings.EnableAutoBackup ? "checked" : "")>
                            <label class="form-check-label" for="EnableAutoBackup">Sao lưu tự động</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="CompressBackup" name="CompressBackup" @(Model.BackupSettings.CompressBackup ? "checked" : "")>
                            <label class="form-check-label" for="CompressBackup">Nén backup</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="IncludeFiles" name="IncludeFiles" @(Model.BackupSettings.IncludeFiles ? "checked" : "")>
                            <label class="form-check-label" for="IncludeFiles">Bao gồm files</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="IncludeDatabase" name="IncludeDatabase" @(Model.BackupSettings.IncludeDatabase ? "checked" : "")>
                            <label class="form-check-label" for="IncludeDatabase">Bao gồm database</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="EnableEmailNotification" name="EnableEmailNotification" @(Model.BackupSettings.EnableEmailNotification ? "checked" : "")>
                            <label class="form-check-label" for="EnableEmailNotification">Thông báo email</label>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <button type="button" class="btn-admin-secondary" id="createBackupBtn">
                        <i class="fas fa-plus"></i> Tạo backup ngay
                    </button>
                    <button type="submit" class="btn-admin">
                        <i class="fas fa-save"></i> Lưu cài đặt
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Monitoring Settings Card -->
    <div class="admin-card settings-card" data-aos="fade-up" data-aos-delay="600">
        <div class="admin-card-header">
            <h5><i class="fas fa-chart-line"></i> Logs & Monitoring</h5>
            <div class="settings-status">
                <span class="status-indicator active"></span>
                <span class="status-text">Đang giám sát</span>
            </div>
    </div>
    <div class="admin-card-body">
            <form id="monitoringSettingsForm" class="settings-form">
                @Html.AntiForgeryToken()
                <div class="form-row">
                    <div class="form-group col-md-4">
                        <label for="LogRetentionDays">Thời gian lưu log (ngày)</label>
                        <input type="number" class="form-control" id="LogRetentionDays" name="LogRetentionDays" value="@Model.MonitoringSettings.LogRetentionDays" min="1" max="365">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="MaxLogEntries">Số lượng log tối đa</label>
                        <input type="number" class="form-control" id="MaxLogEntries" name="MaxLogEntries" value="@Model.MonitoringSettings.MaxLogEntries" min="1" max="1000">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="LogLevel">Mức độ log</label>
                        <select class="form-control" id="LogLevel" name="LogLevel">
                            <option value="Debug" @(Model.MonitoringSettings.LogLevel == "Debug" ? "selected" : "")>Debug</option>
                            <option value="Info" @(Model.MonitoringSettings.LogLevel == "Info" ? "selected" : "")>Info</option>
                            <option value="Warning" @(Model.MonitoringSettings.LogLevel == "Warning" ? "selected" : "")>Warning</option>
                            <option value="Error" @(Model.MonitoringSettings.LogLevel == "Error" ? "selected" : "")>Error</option>
                        </select>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-4">
                        <label for="DiskSpaceThresholdPercent">Ngưỡng dung lượng đĩa (%)</label>
                        <input type="number" class="form-control" id="DiskSpaceThresholdPercent" name="DiskSpaceThresholdPercent" value="@Model.MonitoringSettings.DiskSpaceThresholdPercent" min="50" max="95">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="MemoryThresholdPercent">Ngưỡng RAM (%)</label>
                        <input type="number" class="form-control" id="MemoryThresholdPercent" name="MemoryThresholdPercent" value="@Model.MonitoringSettings.MemoryThresholdPercent" min="50" max="95">
                    </div>
                    <div class="form-group col-md-4">
                        <label for="CPUThresholdPercent">Ngưỡng CPU (%)</label>
                        <input type="number" class="form-control" id="CPUThresholdPercent" name="CPUThresholdPercent" value="@Model.MonitoringSettings.CPUThresholdPercent" min="50" max="95">
                    </div>
                </div>
                <div class="form-group">
                    <div class="form-check-group">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="EnableSystemMonitoring" name="EnableSystemMonitoring" @(Model.MonitoringSettings.EnableSystemMonitoring ? "checked" : "")>
                            <label class="form-check-label" for="EnableSystemMonitoring">Giám sát hệ thống</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="EnableErrorTracking" name="EnableErrorTracking" @(Model.MonitoringSettings.EnableErrorTracking ? "checked" : "")>
                            <label class="form-check-label" for="EnableErrorTracking">Theo dõi lỗi</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="EnablePerformanceMonitoring" name="EnablePerformanceMonitoring" @(Model.MonitoringSettings.EnablePerformanceMonitoring ? "checked" : "")>
                            <label class="form-check-label" for="EnablePerformanceMonitoring">Giám sát hiệu suất</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="EnableUserActivityLogging" name="EnableUserActivityLogging" @(Model.MonitoringSettings.EnableUserActivityLogging ? "checked" : "")>
                            <label class="form-check-label" for="EnableUserActivityLogging">Log hoạt động người dùng</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="EnableRealTimeLogging" name="EnableRealTimeLogging" @(Model.MonitoringSettings.EnableRealTimeLogging ? "checked" : "")>
                            <label class="form-check-label" for="EnableRealTimeLogging">Log thời gian thực</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="EnableEmailAlerts" name="EnableEmailAlerts" @(Model.MonitoringSettings.EnableEmailAlerts ? "checked" : "")>
                            <label class="form-check-label" for="EnableEmailAlerts">Cảnh báo email</label>
                        </div>
                    </div>
                </div>
                <div class="form-actions">
                    <button type="submit" class="btn-admin">
                        <i class="fas fa-save"></i> Lưu cài đặt
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function() {
            // Initialize settings forms
            initializeSettingsForms();
            
            // Initialize tooltips and other UI elements
            initializeUIElements();
        });

        function initializeSettingsForms() {
            // Email Settings Form
            $('#emailSettingsForm').on('submit', function(e) {
                e.preventDefault();
                saveEmailSettings();
            });

            $('#testEmailBtn').on('click', function() {
                testEmailSettings();
            });

            // Security Settings Form
            $('#securitySettingsForm').on('submit', function(e) {
                e.preventDefault();
                saveSecuritySettings();
            });

            // Notification Settings Form
            $('#notificationSettingsForm').on('submit', function(e) {
                e.preventDefault();
                saveNotificationSettings();
            });

            // System Configuration Form
            $('#systemConfigurationForm').on('submit', function(e) {
                e.preventDefault();
                saveSystemConfiguration();
            });

            // Backup Settings Form
            $('#backupSettingsForm').on('submit', function(e) {
                e.preventDefault();
                saveBackupSettings();
            });

            $('#createBackupBtn').on('click', function() {
                createBackup();
            });

            // Monitoring Settings Form
            $('#monitoringSettingsForm').on('submit', function(e) {
                e.preventDefault();
                saveMonitoringSettings();
            });
        }

        function initializeUIElements() {
            // Add loading states to buttons
            $('.btn-admin, .btn-admin-secondary').on('click', function() {
                var $btn = $(this);
                var originalText = $btn.html();
                
                $btn.prop('disabled', true);
                $btn.html('<i class="fas fa-spinner fa-spin"></i> Đang xử lý...');
                
                setTimeout(function() {
                    $btn.prop('disabled', false);
                    $btn.html(originalText);
                }, 2000);
            });

            // Add form validation
            $('input[required]').on('blur', function() {
                validateField($(this));
            });

            // Add real-time validation for email fields
            $('input[type="email"]').on('input', function() {
                validateEmailField($(this));
            });
        }

        function saveEmailSettings() {
            var formData = $('#emailSettingsForm').serialize();
            
            $.ajax({
                url: '@Url.Action("SaveEmailSettings", "Admin")',
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        showNotification('success', response.message);
                        updateStatusIndicator('email', true);
                    } else {
                        showNotification('error', response.message);
                    }
                },
                error: function() {
                    showNotification('error', 'Có lỗi xảy ra khi lưu cài đặt email.');
                }
            });
        }

        function testEmailSettings() {
            var formData = $('#emailSettingsForm').serialize();
            
            $.ajax({
                url: '@Url.Action("TestEmailSettings", "Admin")',
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        showNotification(response.data.testResult ? 'success' : 'warning', response.message);
                    } else {
                        showNotification('error', response.message);
                    }
                },
                error: function() {
                    showNotification('error', 'Có lỗi xảy ra khi test email.');
                }
            });
        }

        function saveSecuritySettings() {
            var formData = $('#securitySettingsForm').serialize();
            
            $.ajax({
                url: '@Url.Action("SaveSecuritySettings", "Admin")',
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        showNotification('success', response.message);
                    } else {
                        showNotification('error', response.message);
                    }
                },
                error: function() {
                    showNotification('error', 'Có lỗi xảy ra khi lưu cài đặt bảo mật.');
                }
            });
        }

        function saveNotificationSettings() {
            var formData = $('#notificationSettingsForm').serialize();
            
            $.ajax({
                url: '@Url.Action("SaveNotificationSettings", "Admin")',
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        showNotification('success', response.message);
                    } else {
                        showNotification('error', response.message);
                    }
                },
                error: function() {
                    showNotification('error', 'Có lỗi xảy ra khi lưu cài đặt thông báo.');
                }
            });
        }

        function saveSystemConfiguration() {
            var formData = $('#systemConfigurationForm').serialize();
            
            $.ajax({
                url: '@Url.Action("SaveSystemConfiguration", "Admin")',
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        showNotification('success', response.message);
                        updateMaintenanceModeStatus(response.data.maintenanceMode);
                    } else {
                        showNotification('error', response.message);
                    }
                },
                error: function() {
                    showNotification('error', 'Có lỗi xảy ra khi lưu cấu hình hệ thống.');
                }
            });
        }

        function saveBackupSettings() {
            var formData = $('#backupSettingsForm').serialize();
            
            $.ajax({
                url: '@Url.Action("SaveBackupSettings", "Admin")',
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        showNotification('success', response.message);
                    } else {
                        showNotification('error', response.message);
                    }
                },
                error: function() {
                    showNotification('error', 'Có lỗi xảy ra khi lưu cài đặt sao lưu.');
                }
            });
        }

        function createBackup() {
            $.ajax({
                url: '@Url.Action("CreateBackup", "Admin")',
                type: 'POST',
                data: {
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        showNotification('success', response.message);
                    } else {
                        showNotification('error', response.message);
                    }
                },
                error: function() {
                    showNotification('error', 'Có lỗi xảy ra khi tạo backup.');
                }
            });
        }

        function saveMonitoringSettings() {
            var formData = $('#monitoringSettingsForm').serialize();
            
            $.ajax({
                url: '@Url.Action("SaveMonitoringSettings", "Admin")',
                type: 'POST',
                data: formData,
                success: function(response) {
                    if (response.success) {
                        showNotification('success', response.message);
                    } else {
                        showNotification('error', response.message);
                    }
                },
                error: function() {
                    showNotification('error', 'Có lỗi xảy ra khi lưu cài đặt giám sát.');
                }
            });
        }

        function showNotification(type, message) {
            var alertClass = type === 'success' ? 'alert-success' : 
                            type === 'warning' ? 'alert-warning' : 'alert-danger';
            
            var notification = `
                <div class="alert ${alertClass} alert-dismissible fade show" role="alert" style="position: fixed; top: 20px; right: 20px; z-index: 9999; min-width: 300px;">
                    <strong>${type === 'success' ? 'Thành công!' : type === 'warning' ? 'Cảnh báo!' : 'Lỗi!'}</strong> ${message}
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            `;
            
            $('body').append(notification);
            
            setTimeout(function() {
                $('.alert').fadeOut();
            }, 5000);
        }

        function updateStatusIndicator(type, isActive) {
            var $card = $(`#${type}SettingsForm`).closest('.settings-card');
            var $indicator = $card.find('.status-indicator');
            var $text = $card.find('.status-text');
            
            if (isActive) {
                $indicator.removeClass('inactive warning').addClass('active');
                $text.text('Hoạt động');
            } else {
                $indicator.removeClass('active warning').addClass('inactive');
                $text.text('Tạm dừng');
            }
        }

        function updateMaintenanceModeStatus(isMaintenanceMode) {
            var $card = $('#systemConfigurationForm').closest('.settings-card');
            var $indicator = $card.find('.status-indicator');
            var $text = $card.find('.status-text');
            
            if (isMaintenanceMode) {
                $indicator.removeClass('active inactive').addClass('warning');
                $text.text('Bảo trì');
            } else {
                $indicator.removeClass('inactive warning').addClass('active');
                $text.text('Hoạt động');
            }
        }

        function validateField($field) {
            var value = $field.val();
            var isValid = true;
            
            if ($field.prop('required') && !value) {
                isValid = false;
            }
            
            if ($field.attr('type') === 'email' && value) {
                var emailRegex = @Html.Raw("new RegExp('^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$')");
                isValid = emailRegex.test(value);
            }
            
            if ($field.attr('type') === 'number') {
                var min = $field.attr('min');
                var max = $field.attr('max');
                var numValue = parseInt(value);
                
                if (min && numValue < parseInt(min)) isValid = false;
                if (max && numValue > parseInt(max)) isValid = false;
            }
            
            $field.toggleClass('is-valid', isValid);
            $field.toggleClass('is-invalid', !isValid);
            
            return isValid;
        }

        function validateEmailField($field) {
            var value = $field.val();
            var emailRegex = @Html.Raw("new RegExp('^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$')");
            var isValid = !value || emailRegex.test(value);
            
            $field.toggleClass('is-valid', isValid);
            $field.toggleClass('is-invalid', !isValid);
        }
    </script>
}
